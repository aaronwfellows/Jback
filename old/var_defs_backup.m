% 4/16/10 - akelly
% This is a header file of sorts.
% This script sets up global variables for site-specific data and 
% paths for running code.  If towers or directories are moved,
% change the information here and not in the main code.

%% TO DO
%  - Improve meas. height for Soaproot
%  - Put calibration coeffs here
%%

% site-specific info
global sites numSites siteAlt towerStartDates dayShift towerYearStart MVL
global VIsites SonicOrientation MVLVI sitePress %towerHeight
% processing parameters
global procInt qTaus tauRefc tauRefh delayRefc delayRefh ParamsCo2 
global ParamsH2o
% computer-specific info
global hostname inputRootDir fastRootDir dirSep
global mergedRootDir bestRootDir combineRootDir outputFileRootName
global cleanedRootDir dataRootDir filledRootDir
% constants
global scaleHeightc oneAtmc Tc R_mol CpAirc Mw_da Mw_water

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Site-specific information
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
sites = {'DC_Burn',...
    'DC_LowDes',...
    'DC_Pinyon',...
    'LR_Grass',...
    'LR_Sage',...
    'JamesRes',...
    'P301',...
    'SJER',...
    'Shorthair', ...
    'Soaproot'};

% sites with vegetation indices
VIsites = [1, 1, 1, 1, 1, 1, 0, 1, 0, 0];

%%% Sonic orientation
% SonicOrientation = [305 236 252 85 266 258 270 NaN];
SonicOrientation = [270 270 270 270 270 180 180 270 270 276];

%%% Updated 10/2011 by mgoulden in SiteDetails.xlsx
% includes tower height
siteAlt = [1303.9;...   % GE
            278.9;...   % GE
           1289.3;...  % GE
            477.0;...  
            477.9;...
           1735.5;... 
           2065.9;... % GE
            424.3;...    % GE
           2736.5;...   % GE
           1196.0];  % Greg/GOES

%%% updated by mgoulden 10/2011
%%% replaces the variable measHeight
%towerHeight = [];   % see SiteDetails.xlsx

% estimated minimum IRGA flow rates for an accurate CO2 conc.  
minFlow = [6; 6.5; 9; 6.5; 6; 7.2; 10.5; 7; 9; 10];
%%% check IRGA pressure instead in future

% calibration CO2 concentration
calibCO2Stds = [350.8; 345; 350.8; 347; 353; 355; 357; NaN; 358; NaN]; 
          
towerStartDates = [[datenum(2006,5,6) ...
    datenum(2006,4,23) ...
    datenum(2006,5,18) ...
    datenum(2006,5,10) ...
    datenum(2006,3,28) ...
    datenum(2006,8,12)] - datenum(2006,1,0)...
    (datenum(2008,9,6)- datenum(2008,1,0))...
    (datenum(2009,10,1)- datenum(2009,1,0))...
    (datenum(2009,10,31)- datenum(2009,1,0))...
    (datenum(2010,7,22) - datenum(2010,1,0))];

towerYearStart(1:6) = datenum(2006,1,0) * ones(6,1);
towerYearStart(7)   = datenum(2008,1,0);
towerYearStart(8:9) = datenum(2009,1,0) * ones(2,1);
towerYearStart(10)  = datenum(2010,1,0);

dayShift = towerYearStart - datenum(1990,1,1);

numSites = length(sites);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Processing parameters
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

procInt = 30;  % processing interval in minutes
procInt = procInt/(24*60);  % convert to fractional day

% time constant calculation set to happen 2 times per day
% set to 'no' for no calculation of time constants
qTaus='TwoPerDay';

tauRefc = 0.35;    
tauRefh = 0.42;
delayRefc = 2.60;    
delayRefh = 2.60;

%%%%%%%%%%%%%%%%%%
%%% The Shaw Model
%
% Parameters for using the Shaw model for time delay and time
% constant.  The model uses a non-linear least squares regression to
% a model for the phase spectrum between a reference (perfect)
% signal and a signal degraded by tube smearing, and delayed in
% time.
%
% The equation for the model is
%
%  Phase = 2*pi*f*DT - atan2(2*pi*f*TAU)
%
% The least squares model accepts minimum and maximum values for
% tau and delay, and requires that initial estimates be given.  Initial
% estimates broadened in 2009 to account for Sierra tower.
%

%%% check these
ParamsCo2.Shawtau0        =  .1;          ParamsH2o.Shawtau0      =  .1;
ParamsCo2.Shawtaumin      =   0;          ParamsH2o.Shawtaumin     =  0;
ParamsCo2.Shawtaumax      =  5.0;         ParamsH2o.Shawtaumax      =  5.0;
ParamsCo2.Shawdelay0      =  1;           ParamsH2o.Shawdelay0      =  1;
ParamsCo2.Shawdelaymin    =  1;           ParamsH2o.Shawdelaymin    =  1;
ParamsCo2.Shawdelaymax    =  7.0;         ParamsH2o.Shawdelaymax    =  7.0;
ParamsCo2.ShawFreqLoTau   =  1/100;       ParamsH2o.ShawFreqLoTau   =  1/100;
ParamsCo2.ShawFreqHiTau   =  .1;          ParamsH2o.ShawFreqHiTau   =  .1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Computer-specific information
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Name of the GOES computer
%%% does this do anything?
% GOEScomp = 'Discostu';

% grab the host name of the machine running the computer
[ret, hostname] = system('hostname');
if ret ~= 0,
   if ispc
      hostname = getenv('COMPUTERNAME');
   else
      hostname = getenv('HOSTNAME');
   end
end
hostname = lower(hostname);

%%% set paths, could be host dependent eventually?
%%% Also, maybe have a preference for directory separator?

[x, user] = system('whoami');
user = strtrim(user);

%%% if strcmp(user, 'anne')
%    inputRootDir  = '/Users/anne/Documents/California/';
%    outputRootDir = '/Users/anne/Documents/Calfornia/data_analysis/';
%    dirSep        = '/';
%else
    inputRootDir  = 'c:\towerData\';
    fastRootDir = 'c:\towerData\fast\';
    dirSep        = '\';
    mergedRootDir = [inputRootDir 'merged' dirSep];
    bestRootDir   = [inputRootDir 'best'   dirSep];
    combineRootDir = [inputRootDir 'combined' dirSep];
    cleanedRootDir = [inputRootDir 'cleaned' dirSep];
    webRootDir    = [inputRootDir 'webpage' dirSep];
    dataRootDir   = [webRootDir 'Data' dirSep];
    filledRootDir = [inputRootDir 'filled' dirSep];
    goesRootDir   = [inputRootDir 'goes' dirSep];
    outputFileRootName = 'Fluxes_';
%end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Set constants
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Tc            = 273.15;   % K
scaleHeightTc = Tc + 20;  % K
gc            = 9.8;      % m s^-2
Rc            = 287;      % J K^-1 kg^-1
Rgasc         = 0.08206;  % L atm K^-1 mol^-1
CpAirc        = 1004.67;  % J K^-1 kg^-1
CpH2Oc        = 1875;     % J K^-1 kg^-1
Mwairc        = 0.0297;   % kg mol^-1
MwH2Oc        = 0.018;    % kg mol^-1
scaleHeightc  = Rc * scaleHeightTc / gc;
oneAtmc       = 101.325;  % kPa
R_mol         = 8.314;    %J K-1 Mol-1
Mw_da         = 28.966;   % g/mol
Mw_water      = 18.01 ;   % g/mol

sitePress = oneAtmc .* exp(-1 .* siteAlt ./ (Rc .* scaleHeightTc ./ gc));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Set up the header for the FLUX and VARIANCE variables.
% This list shows
% the order in which the processed fast data is stored in the
% FluxesSITE_one_array file
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% VARORDER = [ 'TIME', 'HHMM', 'UVWTMEAN', 'UVWTVAR', 'UVWTSKEW',... 
%     'UVWTKURT', 'USTAR', 'THETA', 'COVUVWT', 'HSENSIBLE',...
%     'HLATENT', 'HBUOYANT', 'CO2', 'H2O', 'FCO2',...
%     'FH2O', 'RHOM', 'TAUC', 'TAUH', 'DELAYC',...
%     'DELAYH', 'GAINC', 'GAINH', 'D30MIN'];
% VARSIZES = [1, 4, 4, 4, 4,...
%     1, 2, 6, 1, 7,...
%     7, 1, 1, 2, 1,...
%     1, 1, 2, 2, 2,...
%     2, 1, 1, 200];
% numVars = size(VARORDER);
% varlist(1) = struct('name','TIME',      'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','HHMM');      varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','UVWTMEAN');  varlist = setfield(varlist,{size(varlist,2)},'size',4);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','UVWTVAR');   varlist = setfield(varlist,{size(varlist,2)},'size',4);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','UVWTSKEW');  varlist = setfield(varlist,{size(varlist,2)},'size',4);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','UVWTKURT');  varlist = setfield(varlist,{size(varlist,2)},'size',4);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','THETA');     varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','TSONIC');    varlist = setfield(varlist,{size(varlist,2)},'size',2);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','COVUVWT');   varlist = setfield(varlist,{size(varlist,2)},'size',6);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','USTAR');     varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','CO2');       varlist = setfield(varlist,{size(varlist,2)},'size',7);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','H2O');       varlist = setfield(varlist,{size(varlist,2)},'size',7);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','FCO2');      varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','FH2O');      varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','RHOM');      varlist = setfield(varlist,{size(varlist,2)},'size',2);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','HBUOYANT');  varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','HSENSIBLE'); varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','HLATENT');   varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','TAUC');      varlist = setfield(varlist,{size(varlist,2)},'size',2);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','TAUH');      varlist = setfield(varlist,{size(varlist,2)},'size',2);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','DELAYC');    varlist = setfield(varlist,{size(varlist,2)},'size',2);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','DELAYH');    varlist = setfield(varlist,{size(varlist,2)},'size',2);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','GAINC');     varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','GAINH');     varlist = setfield(varlist,{size(varlist,2)},'size',1);
% varlist = setfield(varlist,{size(varlist,2)+1},'name','D30MIN');    varlist = setfield(varlist,{size(varlist,2)},'size',200);
% 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Set up the master variable list (MVL)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
MVL = {'Counter';...
    'Day of Experiment (decimal)';...
    'HHMM';...
    'U mean, East to West';...
    'V mean, North to South';...
    'W';...
    'Ts';...
    'var(u) along wind';...
    'var(v) cross wind';...
    'var(w)';...
    'var(Ts)';...
    'Skewness(u) along wind';...
    'Skewness(v) cross wind';...
    'Skewness(w)';...
    'Skewness(Ts)';...
    'kurtosis(u) along wind';...
    'kurtosis(v) cross wind';...
    'kurtosis(w)';...
    'kurtosis(Ts)';...
    'USTAR';...
    'Wind Dir (met)';...
    'COV(UW) ROT';...
    'COV(VW) ROT';...
    'COV(UV) ROT';...
    'COV(UT)';...
    'COV(VT)';...
    'COV(WT)';...
    'H SENSIBLE calculated with dry air density and dried sonic temperature (W/M2)';...
    'HLATENT (W/M2)';...
    'H BUOYANT (from sonic)(W/M2)';...
    'CO2 Closed Path MIN (PPM)';...
    'CO2 Closed Path MAX (PPM)';...
    'CO2 Closed Path MEDIAN (PPM)';...
    'CO2 Closed Path MEAN (PPM)';...
    'CO2 Closed Path STD (ppm)';...
    'CO2 Closed Path SKEW';...
    'CO2 Closed Path KURT';...
    'H2O Closed Path MIN (mmol/mol)';...
    'H2O Closed Path MAX (mmol/mol)';...
    'H2O Closed Path MEDIAN (mmol/mol)';...
    'H2O Closed Path MEAN (mmol/mol)';...
    'H2O Closed Path STD (mmol/mol)';...
    'H2O Closed Path SKEW';...
    'H2O Closed Path KURT';...
    'CO2 Closed Path FLUX, HF Correction using sonic temperature,(umol/m2/s)';...
    'H2O Closed Path FLUX, HF Correction using sonic temperature,(mmol/m2/s)';...
    'RHO DRY Closed Path (mol/M3)';...
    'RHO H2O VAP Closed Path (mol/M3)';...
    'Tau CO2 using Shaw Model (sec)';...
    'Tau CO2 actually used for HF correction (sec)';...
    'Tau H2O using Shaw Model (sec)';...
    'Tau H2O actually used for HF correction (sec)';...
    'Delay CO2 using Shaw Model (sec)';...
    'Delay CO2 actually used (sec)';...
    'Delay H2O using Shaw Model (sec)';...
    'Delay H2O actually used (sec)';...
    'Gain for co2 flux using sonic temperature flux and Shaw Model tau';...
    'Gain for h2o flux using sonic temperature flux and Shaw Model tau';...
    'Uz_Uz_2(1)';...
    'Uz_Ux_2(1)';...
    'Uz_Uy_2(1)';...
    'Uz_co2_2(1)';...
    'Uz_h2o_2(1)';...
    'Uz_Ts_2(1)';...
    'Ux_Ux_2(1)';...
    'Ux_Uy_2(1)';...
    'Ux_co2_2(1)';...
    'Ux_h2o_2(1)';...
    'Ux_Ts_2(1)';...
    'Uy_Uy_2(1)';...
    'Uy_co2_2(1)';...
    'Uy_h2o_2(1)';...
    'Uy_Ts_2(1)';...
    'co2_co2_2(1)';...
    'co2_h2o_2(1)';...
    'co2_Ts_2(1)';...
    'h2o_h2o_2(1)';...
    'h2o_Ts_2(1)';...
    'Ts_Ts_2(1)';...
    'Ux_1_Avg(1)';...
    'Uy_1_Avg(1)';...
    'Uz_1_Avg(1)';...
    'Ts_1_Avg(1)';...
    'co2_molar_Avg ';...
    'h2o_molar_Avg ';...
    'netrad_Avg ';...
    'pyrr_in_Avg(1)';...
    'pyrr_out_Avg(1)';...
    'par_in_Avg(1)';...
    'par_out_Avg(1)';...
    'Red_in_Avg';...
    'NIR_in_Avg';...
    'Red_out_Avg';...
    'NIR_out_Avg';...
    'NDVI_Avg';...
    't_hmp_Avg(1)';...
    'rh_hmp_Avg(1)';...
    'e_Avg ';...
    'h2o_hmp_Avg ';...
    'e_sat_Avg ';...
    'T_107_Avg ';...
    'rain_Tot ';...
    'tc_5000_Avg ';...
    'batt_5000_Avg ';...
    'battbank_V_Avg(1)';...
    'panel_V_Avg(1)';...
    'irgatemp_Avg(1)';...
    'irgapress_Avg(1)';...
    'irgaready_Avg(1)';...
    'irgaflow_Avg ';...
    'boxtemp_low_Avg(1)';...
    'batt_5000_Min ';...
    'battbank_V_Min(1)';...
    'irgatemp_Min(1)';...
    'irgapress_Min(1)';...
    'irgaflow_Min ';...
    'irgaready_Max(1)';...
    'co2zero ';...
    'h2ozero ';...
    'flowzero ';...
    'co2span ';...
    'h2ospan ';...
    'flowspan ';...
    'Fwd_Pwr(1)';...
    'Rfl_Pwr(1)';...
    'Batt_4a(1)';...
    'GPS_time(1)';...
    'tube_delay(1)';...
    'n_Tot ';...
    'csat_warning_Tot(1)';...
    'irga_warning_Tot(1)';...
    'del_T_f_1_Tot(1)';...
    'track_f_1_Tot(1)';...
    'amp_h_f_1_Tot(1)';...
    'amp_l_f_1_Tot(1)';...
    'low12V_5000_Tot ';...
    'watchdog_500_Tot ';...
    'Temp_alert_Tot(1)';...
    'Red_alert_Tot(1)';...
    'Yellow_alert_Tot(1)';...
    'Pump_on_Tot ';...
    'IRGA_on_Tot ';...
    'Tower_on_Tot ';...
    'Samp_Cal_Tot ';...
    'CO2_zero_Tot ';...
    'Ux_1_Std(1)';...
    'Uy_1_Std(1)';...
    'Uz_1_Std(1)';...
    'Ts_1_Std(1)';...
    'co2_molar_Std ';...
    'h2o_molar_Std ';...
    'netrad_Std ';...
    'pyrr_in_Std(1)';...
    'pyrr_out_Std(1)';...
    'par_in_Std(1)';...
    'par_out_Std(1)';...
    't_hmp_Std(1)';...
    'rh_hmp_Std(1)';...
    'Red_in_Std';...
    'NIR_in_Std';...
    'Red_out_Std';...
    'NIR_out_Std';...
    'T_107_Std ';...
    'tc_5000_Std ';...
    'batt_5000_Std ';...
    'battbank_V_Std(1)';...
    'panel_V_Std(1)';...
    'irgatemp_Std(1)';...
    'irgapress_Std(1)';...
    'irgaready_Std(1)';...
    'irgaflow_Std '};

MVLVI = {'Counter';...
    'Day of Experiment (decimal)';...
    'HHMM';...
    'U mean, East to West';...
    'V mean, North to South';...
    'W';...
    'Ts';...
    'var(u) along wind';...
    'var(v) cross wind';...
    'var(w)';...
    'var(Ts)';...
    'Skewness(u) along wind';...
    'Skewness(v) cross wind';...
    'Skewness(w)';...
    'Skewness(Ts)';...
    'kurtosis(u) along wind';...
    'kurtosis(v) cross wind';...
    'kurtosis(w)';...
    'kurtosis(Ts)';...
    'USTAR';...
    'Wind Dir (met)';...
    'COV(UW) ROT';...
    'COV(VW) ROT';...
    'COV(UV) ROT';...
    'COV(UT)';...
    'COV(VT)';...
    'COV(WT)';...
    'H SENSIBLE calculated with dry air density and dried sonic temperature (W/M2)';...
    'HLATENT (W/M2)';...
    'H BUOYANT (from sonic)(W/M2)';...
    'CO2 Closed Path MIN (PPM)';...
    'CO2 Closed Path MAX (PPM)';...
    'CO2 Closed Path MEDIAN (PPM)';...
    'CO2 Closed Path MEAN (PPM)';...
    'CO2 Closed Path STD (ppm)';...
    'CO2 Closed Path SKEW';...
    'CO2 Closed Path KURT';...
    'H2O Closed Path MIN (mmol/mol)';...
    'H2O Closed Path MAX (mmol/mol)';...
    'H2O Closed Path MEDIAN (mmol/mol)';...
    'H2O Closed Path MEAN (mmol/mol)';...
    'H2O Closed Path STD (mmol/mol)';...
    'H2O Closed Path SKEW';...
    'H2O Closed Path KURT';...
    'CO2 Closed Path FLUX, HF Correction using sonic temperature,(umol/m2/s)';...
    'H2O Closed Path FLUX, HF Correction using sonic temperature,(mmol/m2/s)';...
    'RHO DRY Closed Path (mol/M3)';...
    'RHO H2O VAP Closed Path (mol/M3)';...
    'Tau CO2 using Shaw Model (sec)';...
    'Tau CO2 actually used for HF correction (sec)';...
    'Tau H2O using Shaw Model (sec)';...
    'Tau H2O actually used for HF correction (sec)';...
    'Delay CO2 using Shaw Model (sec)';...
    'Delay CO2 actually used (sec)';...
    'Delay H2O using Shaw Model (sec)';...
    'Delay H2O actually used (sec)';...
    'Gain for co2 flux using sonic temperature flux and Shaw Model tau';...
    'Gain for h2o flux using sonic temperature flux and Shaw Model tau';...
    'Uz_Uz_2(1)';...
    'Uz_Ux_2(1)';...
    'Uz_Uy_2(1)';...
    'Uz_co2_2(1)';...
    'Uz_h2o_2(1)';...
    'Uz_Ts_2(1)';...
    'Ux_Ux_2(1)';...
    'Ux_Uy_2(1)';...
    'Ux_co2_2(1)';...
    'Ux_h2o_2(1)';...
    'Ux_Ts_2(1)';...
    'Uy_Uy_2(1)';...
    'Uy_co2_2(1)';...
    'Uy_h2o_2(1)';...
    'Uy_Ts_2(1)';...
    'co2_co2_2(1)';...
    'co2_h2o_2(1)';...
    'co2_Ts_2(1)';...
    'h2o_h2o_2(1)';...
    'h2o_Ts_2(1)';...
    'Ts_Ts_2(1)';...
    'Ux_1_Avg(1)';...
    'Uy_1_Avg(1)';...
    'Uz_1_Avg(1)';...
    'Ts_1_Avg(1)';...
    'co2_molar_Avg ';...
    'h2o_molar_Avg ';...
    'netrad_Avg ';...
    'pyrr_in_Avg(1)';...
    'pyrr_out_Avg(1)';...
    'par_in_Avg(1)';...
    'par_out_Avg(1)';...
    'Red_in_Avg';...
    'NIR_in_Avg';...
    'Red_out_Avg';...
    'NIR_out_Avg';...
    'NDVI_Avg';...
    't_hmp_Avg(1)';...
    'rh_hmp_Avg(1)';...
    'e_Avg ';...
    'h2o_hmp_Avg ';...
    'e_sat_Avg ';...
    'T_107_Avg ';...
    'rain_Tot ';...
    'tc_5000_Avg ';...
    'batt_5000_Avg ';...
    'battbank_V_Avg(1)';...
    'panel_V_Avg(1)';...
    'irgatemp_Avg(1)';...
    'irgapress_Avg(1)';...
    'irgaready_Avg(1)';...
    'irgaflow_Avg ';...
    'boxtemp_low_Avg(1)';...
    'batt_5000_Min ';...
    'battbank_V_Min(1)';...
    'irgatemp_Min(1)';...
    'irgapress_Min(1)';...
    'irgaflow_Min ';...
    'irgaready_Max(1)';...
    'co2zero ';...
    'h2ozero ';...
    'flowzero ';...
    'co2span ';...
    'h2ospan ';...
    'flowspan ';...
    'Fwd_Pwr(1)';...
    'Rfl_Pwr(1)';...
    'Batt_4a(1)';...
    'GPS_time(1)';...
    'tube_delay(1)';...
    'n_Tot ';...
    'csat_warning_Tot(1)';...
    'irga_warning_Tot(1)';...
    'del_T_f_1_Tot(1)';...
    'track_f_1_Tot(1)';...
    'amp_h_f_1_Tot(1)';...
    'amp_l_f_1_Tot(1)';...
    'low12V_5000_Tot ';...
    'watchdog_500_Tot ';...
    'Temp_alert_Tot(1)';...
    'Red_alert_Tot(1)';...
    'Yellow_alert_Tot(1)';...
    'Pump_on_Tot ';...
    'IRGA_on_Tot ';...
    'Tower_on_Tot ';...
    'Samp_Cal_Tot ';...
    'CO2_zero_Tot ';...
    'Ux_1_Std(1)';...
    'Uy_1_Std(1)';...
    'Uz_1_Std(1)';...
    'Ts_1_Std(1)';...
    'co2_molar_Std ';...
    'h2o_molar_Std ';...
    'netrad_Std ';...
    'pyrr_in_Std(1)';...
    'pyrr_out_Std(1)';...
    'par_in_Std(1)';...
    'par_out_Std(1)';...
    't_hmp_Std(1)';...
    'rh_hmp_Std(1)';...
    'Red_in_Std';...
    'NIR_in_Std';...
    'Red_out_Std';...
    'NIR_out_Std';...
    'T_107_Std ';...
    'tc_5000_Std ';...
    'batt_5000_Std ';...
    'battbank_V_Std(1)';...
    'panel_V_Std(1)';...
    'irgatemp_Std(1)';...
    'irgapress_Std(1)';...
    'irgaready_Std(1)';...
    'irgaflow_Std '};